/*
---
name: Tooltip
category: JavaScript
---

Inspired by the excellent jQuery.tipsy plugin written by Jason Frame; Tooltips are an updated version, which don't rely on images, use CSS3 for animations, and data-attributes for local title storage.

Tooltips with zero-length titles are never displayed.

Examples
--------
Hover over the links below to see tooltips:

```example.html hidden
<p>Tight pants next level keffiyeh <a href="#" data-toggle="tooltip" title="Default tooltip">you probably</a> haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown. Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel <a href="#" data-toggle="tooltip" title="Another tooltip">have a</a> terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu biodiesel williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A really ironic artisan <a href="#" data-toggle="tooltip" title="Another one here too">whatever keytar</a>, scenester farm-to-table banksy Austin <a href="#" data-toggle="tooltip" title="The last tip!">twitter handle</a> freegan cred raw denim single-origin coffee viral.</p>
```
```example.js hidden
$(function () {
  $('[data-toggle="tooltip"]').tooltip()
})
```

### Static tooltip
Four options are available: top, right, bottom, and left aligned.

```static.html hidden height=50
<div class="tooltip left" role="tooltip">
  <div class="tooltip-arrow"></div>
  <div class="tooltip-inner">
    Tooltip on the left
  </div>
</div>
<div class="tooltip top" role="tooltip">
  <div class="tooltip-arrow"></div>
  <div class="tooltip-inner">
    Tooltip on the top
  </div>
</div>
<div class="tooltip bottom" role="tooltip">
  <div class="tooltip-arrow"></div>
  <div class="tooltip-inner">
    Tooltip on the bottom
  </div>
</div>
<div class="tooltip right" role="tooltip">
  <div class="tooltip-arrow"></div>
  <div class="tooltip-inner">
    Tooltip on the right
  </div>
</div>
```

### Four directions

```static-directions.html
<button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="left" title="Tooltip on left">Tooltip on left</button>

<button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Tooltip on top">Tooltip on top</button>

<button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="bottom" title="Tooltip on bottom">Tooltip on bottom</button>

<button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="right" title="Tooltip on right">Tooltip on right</button>
```
```static-directions.js hidden
$(function () {
  $('[data-toggle="tooltip"]').tooltip()
})
```

#### Opt-in functionality
For performance reasons, the Tooltip and Popover data-apis are opt-in, meaning you must initialize them yourself.

One way to initialize all tooltips on a page would be to select them by their data-toggle attribute:
```js
$(function () {
  $('[data-toggle="tooltip"]').tooltip()
})
```

Usage
-----
The tooltip plugin generates content and markup on demand, and by default places tooltips after their trigger element.

Trigger the tooltip via JavaScript:
```js
$('#example').tooltip(options)
```

Markup
------
The required markup for a tooltip is only a `data` attribute and `title` on the HTML element you wish to have a tooltip. The generated markup of a tooltip is rather simple, though it does require a position (by default, set to `top` by the plugin).

```html
<!-- HTML to write -->
<a href="#" data-toggle="tooltip" title="Some tooltip text!">Hover over me</a>

<!-- Generated markup by the plugin -->
<div class="tooltip top" role="tooltip">
  <div class="tooltip-arrow"></div>
  <div class="tooltip-inner">
    Some tooltip text!
  </div>
</div>
```

Interactive example
-------------------

To use an @ symbol at the start of a line within the description, simply escape it with a backslash like so:
\@example This will be in the description
\@category This will be too

But escaped @ symbols occurring NOT at the beginning (like this one \@) should remain escaped.

```interactive.html
<button>Click me</button>
```
```interactive.html hidden
<input type="text">
```
```interactive.js hidden
var button = document.getElementsByTagName('button')[0];
var input = document.getElementsByTagName('input')[0];

input.addEventListener('keyup', function() {
  button.innerHTML = input.value;
})
```
*/
